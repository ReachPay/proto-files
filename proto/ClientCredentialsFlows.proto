
syntax = "proto3";
import "google/protobuf/empty.proto";
package credentials;

message RegisterClientGrpcRequest {
    string Email = 1;
    string Password = 2;
    string ProcessId = 3;
    string Domain = 4;
    string LangId = 5;
}

message RegisterClientGrpcResponse {
    credentials.ClientRegistrationStatus Result = 1;
    string ClientId = 2;
}

message VerifyClientPasswordGrpcRequest {
    string Email = 1;
    string Password = 2;

}

message VerifyClientPasswordGrpcResponse {
    string ClientId = 1;
}

message UpdateClientPasswordGrpcRequest {
    string Email = 1;
    string Password = 2;

}

enum ClientRegistrationStatus {
    Registered = 0;
    ClientExists = 1;
}

message GetIdByEmailRequest {
    string Email = 1;
}

message GetIdByEmailResponse {
    string ClientId = 1;
}


message GetEmailByIdRequest {
    string ClientId = 1;
}

message GetEmailByIdResponse {
    string Email = 1;
}

message ResolveAutoLoginTokenRequest {
    string Token = 1;
}

enum ResolveAutoLoginStatus{
    Ok = 0;
    Expired = 1;
    Invalid = 2;
}

message ResolveAutoLoginTokenResponse {
    credentials.ResolveAutoLoginStatus Result = 1;
    string ClientId = 2;

}

message CheckClientIdRequest{
    string ClientId = 1;
}

message CheckClientIdResponse{
    bool Found = 1;
}


service ClientCredentialsFlowsGrpcService {
    rpc Register(credentials.RegisterClientGrpcRequest) returns (credentials.RegisterClientGrpcResponse);
    rpc VerifyPassword(credentials.VerifyClientPasswordGrpcRequest) returns (credentials.VerifyClientPasswordGrpcResponse);
    rpc GetIdByEmail(credentials.GetIdByEmailRequest) returns (credentials.GetIdByEmailResponse);
    rpc GetEmailById(credentials.GetEmailByIdRequest) returns (credentials.GetEmailByIdResponse);
    rpc UpdatePasswordByEmail(credentials.UpdateClientPasswordGrpcRequest) returns (google.protobuf.Empty);
    rpc CheckClientId(credentials.CheckClientIdRequest) returns (credentials.CheckClientIdResponse);
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
 }

